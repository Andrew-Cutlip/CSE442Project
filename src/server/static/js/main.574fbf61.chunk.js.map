{"version":3,"sources":["components/RedirectButton.jsx","components/RegistrationForm.jsx","components/LoginForm.jsx","components/PostForm.jsx","components/Post.jsx","components/HomePage.jsx","components/AccountPage.jsx","components/About.jsx","components/Contact.jsx","components/Friendslist.jsx","components/StarRatings.jsx","components/Change.jsx","components/Rankings.jsx","components/Page.jsx","components/LogoutButton.jsx","components/NavBar.jsx","components/Header.jsx","App.jsx","index.jsx"],"names":["RedirectButton","props","onClick","onclick","text","RegistrationForm","useState","Password","setPassword","Username","setUsername","Email","setEmail","Submit","setSubmit","useEffect","requestOptions","method","headers","body","JSON","stringify","username","password","email","fetch","then","response","data","console","log","success","handleSubmit","e","preventDefault","clientId","showLoginButton","setShowLoginButton","showLogoutButton","setShowLogoutButton","id","name","className","align","onSubmit","type","placeholder","required","onChange","target","value","buttonText","onSuccess","res","profileObj","onFailure","cookiePolicy","onLogoutSuccess","alert","Login","Headers","window","origin","json","loggedIn","changeLoginStatus","setAccount","catch","error","PostForm","Title","setTitle","Summary","setSummary","Location","setLocation","ServerError","setServerError","TitleError","setTitleError","SummaryError","setSummaryError","LocationError","setLocationError","title","summary","location","errorMessage","titleValidation","summaryValidation","locationValidation","htmlFor","t","s","l","Post","images","map","img","src","alt","ratings","rating","score","containerStyle","width","height","center","lat","lng","HomePage","Posts","setPosts","posts","postsDisplay","p","googleMapsApiKey","mapContainerStyle","zoom","AccountPage","accountName","About","Contact","friends","Friendslist","Friend","setFriend","friend","colors","orange","white","styles_s","container","display","flexDirection","alignItems","stars","venue","venues","border","borderRadius","padding","margin","minHeight","textAlign","textarea","StarRatings","currentValue","setCurrentValue","undefined","hoverValue","setHoverValue","Array","fill","Comment","setComment","Name","setName","Star","setStar","comment","starRating","handleMouseLeave","style","color","TextField","variant","fullWidth","_","index","size","onMouseOver","onMouseLeave","grey","marginRight","cursor","Change","NewUsername","setNewUsername","newusername","rankings","Rankings","parse","rank","bordercolor","bgcolor","person","user_Id","Page","pageContent","LoginForm","LogoutButton","NavBar","links","link","path","key","Logout","Header","App","pageName","setPageName","setAccountName","setLoggedIn","handlePageSwitch","document","login","register","account","change","friendslist","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.574fbf61.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Form.css\";\nfunction RedirectButton(props) {\n    return (\n        <button onClick={props.onclick}>\n            {props.text}\n        </button>\n    )\n}\n\nexport default RedirectButton","import React, {useEffect, useState} from \"react\";\nimport RedirectButton from \"./RedirectButton\"\nimport {GoogleLogin, GoogleLogout} from 'react-google-login'\nimport \"./Form.css\";\n\n\nfunction RegistrationForm(props) {\n\n    const [Password, setPassword] = useState(\"\");\n    const [Username, setUsername] = useState(\"\")\n    const [Email, setEmail] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n       const requestOptions = {\n           method: 'POST',\n           headers: {\n               \"Content-Type\": \"application/json\",\n               \"Accept\": \"application/json\"\n           },\n           body: JSON.stringify({\n               username: Username,\n               password: Password,\n               email: Email\n           })\n       };\n           if (Submit) {\n               setSubmit(false);\n               fetch(\"/register\", requestOptions)\n                .then(response => response)\n                .then(data => {\n                    console.log(\"Registered!\");\n                    console.log(data);\n                    setPassword(\"\");\n                    setUsername(\"\");\n                    setEmail(\"\");\n                    let success = data.success;\n                    console.log(success);\n                    console.log(Password);\n                })\n            }\n    }, [Submit, Password, Username, Email, props]);\n\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Handling Submit\")\n        setSubmit(true);\n    };\n\n    const clientId = \"891542752976-2b518b2l45tl0foe8c17pjm1h76pcf79.apps.googleusercontent.com\"\n    const [showLoginButton, setShowLoginButton] = useState(true);\n    const [showLogoutButton, setShowLogoutButton] = useState(false);\n\n    const onLogInSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowLoginButton(false);\n        setShowLogoutButton(true);\n    }\n    const onFailureSuccess = (res) => {\n        console.log('Login Failed:', res);\n    }\n    const onSignoutSuccess = (res) => {\n        alert(\"You have been signed out successfully.\")\n        setShowLoginButton(true);\n        setShowLogoutButton(false);\n    }\n\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n    let handleEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    return (\n        <div>\n            <h1>Register</h1>\n                <form id=\"Register\" name=\"Register\"  className = \"Register\"  align = \"Center\" onSubmit={handleSubmit}>\n\n                        <label>\n                            UserName:\n                            <input name=\"username\" type=\"text\" placeholder=\"Username\" required onChange={handleUsername} value={Username}/>\n                        </label>\n                        <label>\n                            Password:\n                            <input name=\"password\" type=\"password\" placeholder=\"Password\" required onChange={handlePassword} value={Password}/>\n                        </label>\n                        <label>\n                            Email:\n                            <input name=\"email\" type=\"email\" placeholder=\"example@ex.com\" required onChange={handleEmail} value={Email}/>\n                        </label>\n                        <input type=\"submit\" value=\"Submit\" onClick={handleSubmit}/>\n                        <RedirectButton type = \"Submit\" className = \"RedirectButton\" text={\"Already have an account: Login here\"}\n           onclick={() => props.onclick(\"login\")}>\n\n           </RedirectButton>\n\n            {showLoginButton ?\n                    <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onLogInSuccess}\n                    onFailure={onFailureSuccess}\n                    cookiePolicy={'single_host_origin'}\n                    className=\"gsignin\"\n                    />\n                    : null\n\n            }\n\n            {showLogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n                </form>\n\n        </div>\n\n\n\n    );\n}\nexport default RegistrationForm;","import React, {useEffect, useState} from \"react\";\nimport RedirectButton from \"./RedirectButton\"\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\nimport \"./Form.css\";\n\nfunction Login(props) {\n    const clientId = \"891542752976-2b518b2l45tl0foe8c17pjm1h76pcf79.apps.googleusercontent.com\"\n    const [showLoginButton, setShowLoginButton] = useState(true);\n    const [showLogoutButton, setShowLogoutButton] = useState(false);\n\n    const onLogInSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowLoginButton(false);\n        setShowLogoutButton(true);\n    }\n    const onFailureSuccess = (res) => {\n        console.log('Login Failed:', res);\n    }\n\n    const onSignoutSuccess = (res) => {\n        alert(\"You have been signed out successfully.\")\n        setShowLoginButton(true);\n        setShowLogoutButton(false);\n    }\n\n    const [Password, setPassword] = useState(\"\");\n    const [Username, setUsername] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n       const requestOptions = {\n           method: 'POST',\n           headers: new Headers({\n               \"Content-Type\": \"application/json\",\n               \"Accept\": \"application/json\"\n           }),\n           body: JSON.stringify({\n               username: Username,\n               password: Password\n           })\n       };\n           if (Submit) {\n               setSubmit(false);\n                fetch(`${window.origin}/login`, requestOptions)\n                    .then(response => response.json)\n                    .then(data => {\n                        console.log(\"LoggedIn!\");\n                        console.log(data);\n                        let loggedIn = data.loggedIn;\n                        if (loggedIn) {\n                            console.log(\"Changed to logged in\");\n                            props.changeLoginStatus();\n                        }\n                        console.log(Username);\n                        props.setAccount(Username);\n                        let success = data.success;\n                        console.log(success);\n                        //setPassword(\"\");\n                        //setUsername(\"\");\n                    })\n                    .catch(function(error){\n                        console.log(\"Fetch error \" + error )\n                    })\n                }\n    }, [Submit, Password, Username, props]);\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setSubmit(true);\n    };\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return(\n        <div>\n        <h1>Login</h1>\n        <form id=\"Login-Form\" className = \"Login\" name=\"Login\" onSubmit={handleSubmit}>\n        <label> Username:\n        <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" onChange={handleUsername} value={Username}/>\n        </label>\n        <label> Password:\n        <input type=\"password\" name=\"password\" id=\"logPassword\" placeholder=\"Password\" onChange={handlePassword} value={Password}/>\n        </label>\n        <input type=\"submit\" name=\"submit\" value=\"Submit\" onSubmit={handleSubmit}/>\n\n            <RedirectButton text={\"Create an account\"}\n           onclick={() => props.onclick(\"register\")}>\n\n           </RedirectButton>\n\n            {showLoginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onLogInSuccess}\n                    onFailure={onFailureSuccess}\n                    cookiePolicy={'single_host_origin'}\n                /> : null\n\n            }\n\n            {showLogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n            </form>\n        </div>\n\n    );\n}\nexport default Login;","import React, {useEffect, useState} from \"react\";\n\nconst PostForm = (props) => {\n    const [Submit, setSubmit] = useState(false);\n    const [Title, setTitle] = useState(\"\");\n    const [Summary, setSummary] = useState(\"\");\n    const [Location, setLocation] = useState(\"\");\n    const [ServerError, setServerError] = useState(\"\");\n    const [TitleError, setTitleError] = useState(\"\");\n    const [SummaryError, setSummaryError] = useState(\"\");\n    const [LocationError, setLocationError] = useState(\"\");\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: Title,\n                summary: Summary,\n                location: Location,\n                }\n            )\n        };\n        if (Submit) {\n            setSubmit(false);\n\n                fetch(\"/make-post\", requestOptions)\n                    .then(response => response.json())\n                    .then(json => {\n                        let error = json[\"error\"]\n                        if (error) {\n                            let errorMessage = json[\"message\"];\n                            setServerError(errorMessage);\n                        }\n                    })\n                    .then(data => console.log(data))\n            }\n    }, [Submit, Location, setSubmit, Title, Summary]);\n\n    const handleSubmit = (e) => {\n        let t = titleValidation();\n            let s = summaryValidation();\n            let l = locationValidation();\n            if (t && s && l ) {\n                setSubmit(true);\n            }\n            else {\n                e.preventDefault();\n            }\n    };\n\n    const handleTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const handleSummary = (e) => {\n      setSummary(e.target.value);\n    };\n\n    const handleLocation = (e) => {\n        setLocation(e.target.value);\n    }\n\n    const titleValidation = () => {\n        // Check for blank title\n        if (Title === \"\"){\n            setTitleError(\"Title can't be blank\");\n            return false;\n        }\n        setTitleError(\"\");\n        return true;\n    }\n\n    const summaryValidation = () => {\n        // Check for blank summary\n        if (Summary === \"\"){\n            setSummaryError(\"Summary can't be blank\");\n            return false;\n        }\n        setSummaryError(\"\");\n        return true;\n    }\n\n    const locationValidation = () => {\n        if (Location === \"\"){\n            setLocationError(\"Location can't be blank\");\n            return false;\n        }\n        setLocationError(\"\");\n        return true;\n    }\n\n    return (\n        <div id=\"post-form\">\n            <h2>Make a Post</h2>\n            <form >\n                <div id=\"server-error\">\n                    {ServerError}\n                </div>\n                <label htmlFor=\"title\">\n                    Title:\n                    <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\" value={Title}\n                           onChange={handleTitle}/>\n                    <div className = \"error\">\n                        {TitleError}\n                    </div>\n                </label>\n                <label htmlFor=\"summary\">\n                    Summary:\n                    <textarea name=\"summary\" id=\"summary\" placeholder=\"Summarize your trip here.\"\n                              value={Summary} onChange={handleSummary}/>\n                    <div className = \"error\">\n                        {SummaryError}\n                    </div>\n                </label>\n                <label htmlFor=\"location\">\n                    Location:\n                    <input type=\"text\" name=\"location\" id=\"location\" placeholder=\"Location\" value={Location}\n                           onChange={handleLocation}/>\n                    <div className = \"error\">\n                        {LocationError}\n                    </div>\n                </label>\n                <input type=\"submit\" onClick={handleSubmit} value=\"Add Post\"/>\n            </form>\n\n        </div>\n    )\n};\nexport default PostForm;","import React from \"react\";\n\nconst Post = (props) => {\n    let images = props.images;\n    if (images){\n        images = images.map((img) => {\n            return (<img src={img.src} alt={img.alt} />);\n        })\n    }\n    // Need rating component to add here\n    let ratings = props.ratings;\n    if (ratings){\n        ratings = ratings.map((rating) => {\n            return (<div className=\"rating\">{rating.score}</div>);\n        })\n    }\n    return (\n        <div className=\"post\">\n            <h2>{props.title}</h2>\n            <p>{props.summary}</p>\n            <p>{props.location}</p>\n            {images}\n            {ratings}\n        </div>\n    )\n};\nexport default Post;","import React, {useEffect, useState} from \"react\";\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport PostForm from \"./PostForm\"\nimport Post from \"./Post\"\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n}\nconst center = {\n    lat: -3.745,\n    lng: -30.523\n};\nconst requestOptions = {\n           method: 'GET',\n           headers: {\n               \"Content-Type\": \"application/json\"\n           },\n       };\n\nconst HomePage = () => {\n    const [Posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/get-posts\", requestOptions)\n                .then(response => {\n                    return response.json()\n                })\n                .then((json) => {\n                    let posts = json.posts;\n                    console.log(posts);\n                    let postsDisplay = posts.map((p) => {\n                        console.log(p);\n                        return (\n                            <Post title={p.title} summary={p.summary} location={p.location}/>\n                        )\n                    });\n                    setPosts(postsDisplay);\n                    return json\n                })\n                .then(data => console.log(data))\n\n    }, [setPosts]);\n\n    return (\n\n        <div id=\"home\">\n\n            <h1>Home\n                <center><LoadScript\n                    googleMapsApiKey=\"AIzaSyB0ETFhO3BJFNA2LGz_ROSQQ-P9LWmnPLg\"\n                >\n                    <GoogleMap\n                        mapContainerStyle={containerStyle}\n                        center={center}\n                        zoom={1}\n                    >\n                        { /* Child components, such as markers, info windows, etc. */ }\n                        <></>\n                    </GoogleMap>\n                </LoadScript></center>\n\n            </h1>\n            <p>If you love to travel,\n                Why not share your experience to the world?\n            </p>\n            {Posts}\n            <PostForm />\n        </div>\n    );\n};\nexport default HomePage;","import React from \"react\";\n\nconst AccountPage = (props) => {\n  return (\n    <div>\n      <h2>My Account:</h2>\n        <p>Welcome {props.accountName}!</p>\n    </div>\n  );\n};\n\nexport default AccountPage;","import React from \"react\";\n\nconst About = () =>{\n    return(\n        <div id=\"about\">\n\n            <h1>About us</h1>\n\n            <h1>Development Team</h1>\n            <h3>Background</h3>\n            <p>\n                 We are a group of people who love to travel. Many of us a still pioneers at traveling,\n                however, we know many people enjoy traveling as a hobby.\n            </p>\n            <h3>Goals</h3>\n            <p>\n             Our goal is to bring people together. Those who travel hundreds of miles can stay in cantact with\n                each other and share their traveling experiences with other people.\n            </p>\n        </div>\n            \n    );\n}\nexport default About;\n\n","import React from \"react\";\n\nconst Contact = () => {\n    return(\n\n        <div id=\"contact\">\n\n                    <h1>Contact us</h1>\n                    <p>\n                        If you are having trouble with the site or want more\n                        information. Feel free to contact us!\n                    </p>\n                    \n                    <p>Information</p>\n                    <p>Emails:\n                    some1@gmail.com</p>\n                    <p>Phone:\n                    777-7777-7777</p>\n                    <p>Location:\n                    Buffalo\n                    </p>\n            </div>\n    );\n}\nexport default Contact;","import React, {useEffect, useState} from \"react\";\nimport \"./Form.css\";\n\nlet friends = [];\nconst Friendslist = (props) => {\n\n    const [Friend, setFriend] = useState(\"\")\n    const [Username, setUsername] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n       const requestOptions = {\n           method: 'POST',\n           headers: {\n               \"Content-Type\": \"application/json\"\n           },\n           body: JSON.stringify({\n               username: Username,\n               friend: Friend\n           })\n       };\n           if (Submit) {\n               setSubmit(false);\n                fetch(\"/friends\", requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(\"Added friend!\");\n                        console.log(data);\n                        friends =  (JSON.stringify(data));\n\n                        setUsername(\"\");\n                        setFriend(\"\");\n                    })\n                }\n    }, [Submit, Friend, Username, props]);\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setSubmit(true);\n    };\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handleFriend = (e) => {\n        setFriend(e.target.value);\n    }\n\n    return(\n        <div>\n        <h1>Friend</h1>\n        <form id=\"AddFriend-Form\" className = \"AddFriend\" name=\"AddFriend\" onSubmit={handleSubmit}>\n        <label> Your Username:\n        <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" onChange={handleUsername} value={Username}/>\n        </label>\n        <label> Friend to Add:\n        <input type=\"friend\" name=\"friend\" id=\"logFriend\" placeholder=\"Friend\" onChange={handleFriend} value={Friend}/>\n        </label>\n        <input type=\"submit\" name=\"submit\" value=\"Submit\" onSubmit={handleSubmit}/>\n\n            </form>\n            <div> <h1> \"My FriendsList\" </h1>\n                <h2> {friends} </h2>\n            </div>\n        </div>\n\n    );\n};\nexport default Friendslist;","import React, {useEffect, useState} from \"react\";\nimport '../StarRatings.css';\nimport { FaStar } from \"react-icons/fa\";\nimport { TextField} from \"@material-ui/core\";\n\n\nconst colors = {\n    orange: \"#FFD700\",\n    white: \"#FFFAFA\"\n};\n\nfunction StarRatings() {\n  const [currentValue, setCurrentValue] = useState(0);\n  const [hoverValue, setHoverValue] = useState(undefined);\n  const stars = Array(5).fill(0)\n    const [Submit, setSubmit] = useState(false);\n    const [Comment, setComment] = useState(\"\");\n    const [Location, setLocation] = useState(\"\");\n    const [Name, setName] = useState(\"\");\n    const [Star, setStar] = useState(\"\");\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                comment: Comment,\n                location: Location,\n                starRating: Star,\n                Name: Name,\n                }\n            )\n        };\n        if (Submit) {\n            setSubmit(false);\n            fetch(\"/rating\", requestOptions)\n                .then(response => response.json())\n                .then(data => console.log(data))\n        }\n    }, [Star, Comment, Location, Submit, Name]);\n\n  const handleClick = value => {\n    setCurrentValue(value)\n  }\n\n  const handleMouseOver = newHoverValue => {\n    setHoverValue(newHoverValue)\n  };\n\n  const handleMouseLeave = () => {\n    setHoverValue(undefined)\n  }\n\n  const handleSubmit = () => {\n        setSubmit(true);\n    };\n\n  const handleComment = (e) => {\n      setComment(e.target.value);\n    };\n\n    const handleLocation = (e) => {\n        setLocation(e.target.value);\n    }\n\n    const handleName = (e) => {\n        setName(e.target.value);\n    }\n\n    const handleStar = (e) => {\n        setStar(e.target.value);\n    }\n\n  return (\n\n    <div style={styles_s.container}>\n      <div style={styles_s.venue}>\n          <label style={{color: 'white'}}>Venue(required)\n            <TextField required\n                       color={\"secondary\"}\n                       //style={styles_s.venues}\n                       value={Name} onChange={handleName}\n                       variant=\"outlined\"\n                       fullWidth={100}\n            />\n          </label>\n          <label style={{color: 'white'}}>Location(required)\n            <TextField required\n                       color={\"secondary\"}\n                       //style={styles_s.venues}\n                       value={Location}\n                       onChange={handleLocation}\n                       variant=\"outlined\"\n                       fullWidth={100}\n            />\n          </label>\n          <label style={{color: 'white'}}>Number of stars(1 to 5; required)\n            <TextField required\n                       color={\"secondary\"}\n                       //style={styles_s.venues}\n                       value={Star}\n                       onChange={handleStar}\n                       variant=\"outlined\"\n                       fullWidth={100}\n            />\n          </label>\n      </div>\n      <div style={styles_s.stars}>\n        {stars.map((_, index) => {\n          return (\n            <FaStar\n              key={index}\n              size={35}\n              onClick={() => handleClick(index + 1)}\n              onMouseOver={() => handleMouseOver(index + 1)}\n              onMouseLeave={handleMouseLeave}\n              //value={Star}\n              //onChange={handleStar}\n              color={(hoverValue || currentValue) > index ? colors.orange : colors.grey}\n              style={{\n                marginRight: 50,\n                cursor: \"pointer\"\n              }}\n            />\n          )\n        })}\n      </div>\n        <form style={{color: 'white'}}>Comment(required)\n      <TextField\n        placeholder=\"Please share your own experience at this place\"\n        required\n        color={\"secondary\"}\n        //style={styles_s.textarea}\n        value={Comment} onChange={handleComment}\n        //color=\"secondary\"\n        variant=\"outlined\"\n        fullWidth={100}\n      />\n        </form>\n        <input type=\"submit\" onClick={handleSubmit} value=\"Post\"/>\n    </div>\n  );\n}\n\n\nconst styles_s = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  stars: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  venue: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  venues: {\n    border: \"2px solid #a9a9a9\",\n    borderRadius: 10,\n    padding: 5,\n    margin: \" 20px 0\",\n    minHeight: 100,\n    width: 300,\n    textAlign: \"center\",\n  },\n  textarea: {\n    border: \"2px solid #a9a9a9\",\n    borderRadius: 10,\n    padding: 50,\n    margin: \"20px 0\",\n    minHeight: 150,\n    width: 400,\n    textAlign: \"center\",\n  },\n\n};\n\nexport default StarRatings;","import React, {useEffect, useState} from \"react\";\nimport \"./Form.css\";\n\nconst Change = (props) => {\n    const [Password, setPassword] = useState(\"\");\n    const [Username, setUsername] = useState(\"\")\n    const [NewUsername, setNewUsername] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: Username,\n                password: Password,\n                newusername: NewUsername,\n            })\n        };\n        if (Submit) {\n            setSubmit(false);\n            fetch(\"/change\", requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"LoggedIn!\");\n                    console.log(data);\n                    let loggedIn = data.loggedIn;\n                    if (loggedIn) {\n                        props.changeLoginStatus();\n                    }\n                    console.log(Username);\n                    props.setAccount(NewUsername);\n                    let success = data.success;\n                    console.log(success);\n                    setPassword(\"\");\n                    setUsername(\"\");\n                    setNewUsername(\"\");\n                })\n        }\n\n\n    }, [Submit, Password, Username, NewUsername, props]);\n\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setSubmit(true);\n    };\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n    let handleNewUsername = (e) => {\n        setNewUsername(e.target.value);\n    };\n    return (\n        <div id=\"account\">\n            <h2>My Account:</h2>\n            <p>Welcome {props.accountName}!</p>\n\n\n            <h1>Change my username</h1>\n            <form id=\"Login-Form\" className = \"Login\" name=\"Login\" onSubmit={handleSubmit}>\n\n                <label> Username:\n                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" onChange={handleUsername} value={Username}/>\n                </label>\n                <label> New Username:\n                    <input type=\"text\" name=\"newusername\" id=\"newusername\" placeholder=\"New Username\" onChange={handleNewUsername} value={NewUsername}/>\n                </label>\n                <label> Password:\n                    <input type=\"password\" name=\"password\" id=\"logPassword\" placeholder=\"Password\" onChange={handlePassword} value={Password}/>\n                </label>\n                <input type=\"submit\" name=\"submit\" value=\"Submit\" onSubmit={handleSubmit}/>\n            </form>\n\n\n        </div>\n\n    );\n};\nexport default Change;","import React, {useEffect, useState} from \"react\";\nimport \"./Form.css\";\n\nlet rankings = [];\nconst Rankings = (props) => {\n    const [Friend, setFriend] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                location: Friend\n            })\n        };\n        if (Submit) {\n            setSubmit(false);\n            fetch(\"/rankings\", requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"Show all venues!\");\n                    console.log(data);\n                    rankings =  JSON.parse((JSON.stringify(data)));\n                    setFriend(\"\");\n\n                })\n        }\n    }, [Submit, Friend,props]);\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setSubmit(true);\n    };\n    let handleFriend = (e) => {\n        setFriend(e.target.value);\n    }\n\n\n    return(\n        <div>\n            <h1>VENUE RANKINGS</h1>\n            <center>\n            <form id=\"Rankings-Form\" className = \"Rankings\" name=\"Rankings\" onSubmit={handleSubmit}>\n                <label>\n                    <input type=\"friend\" name=\"friend\" id=\"logFriend\" placeholder=\"Enter Location\" onChange={handleFriend} value={Friend}/>\n                </label>\n                <input type=\"submit\" name=\"submit\" value=\"See Venue Rankings\" onSubmit={handleSubmit}/>\n\n            </form>\n            </center>\n            <div> <h1> </h1>\n                {rankings.map(rank => (\n\n                <table border = \"1\" bordercolor = \"green\" bgcolor = \"yellow\">\n\n                    <tr>\n                            <td>USERNAME</td>\n                            <td>COMMENT</td>\n                            <td>VENUE</td>\n                            <td>RATING</td>\n                            <td>LOCATION</td>\n                    </tr>\n                    <tr>\n                        {rank.map(person => (\n                            <td>{person.user_Id[0]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.comment[0]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.name}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.rating[0]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.location}</td>\n                        ))}\n                    </tr>\n\n                    <tr>\n                        {rank.map(person => (\n                            <td>{person.user_Id[1]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.comment[1]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.name}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.rating[1]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.location}</td>\n                        ))}\n                    </tr>\n\n                    <tr>\n                        {rank.map(person => (\n                            <td>{person.user_Id[2]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.comment[2]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.name}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.rating[2]}</td>\n                        ))}\n                        {rank.map(person => (\n                            <td>{person.location}</td>\n                        ))}\n                    </tr>\n\n                </table>\n                ))}\n\n            </div>\n        </div>\n\n    );\n};\nexport default Rankings;","import React from \"react\";\nimport RegistrationForm from \"./RegistrationForm\"\nimport LoginForm from \"./LoginForm\"\nimport HomePage from \"./HomePage\";\nimport AccountPage from \"./AccountPage\";\nimport About from \"./About\"\nimport Contact from \"./Contact\";\nimport Friendslist from \"./Friendslist\";\nimport StarRatings from \"./StarRatings\";\nimport Change from \"./Change\";\nimport Rankings from \"./Rankings\";\n\nconst Page = (props) => {\n    let pageContent;\n    if (props.name === \"register\") {\n        pageContent = <RegistrationForm onclick={props.onclick} changeLoginStatus={props.changeLoginStatus}/>\n    }\n    else if (props.name === \"login\"){\n        pageContent = <LoginForm onclick={props.onclick} setAccount={props.setAccount} changeLoginStatus={props.changeLoginStatus}/>;\n    }\n    else if (props.name === \"account\"){\n        pageContent = <AccountPage accountName={props.accountName}/>\n    }\n    else if (props.name === \"about\"){\n        pageContent = <About />\n    }\n    else if (props.name === \"contact\"){\n        pageContent = <Contact />\n    }\n    else if (props.name === \"friendslist\"){\n        pageContent = <Friendslist />\n        }\n    else if (props.name === \"starRatings\"){\n        pageContent = <StarRatings />\n    }\n    else if (props.name === \"change\"){\n        pageContent = <Change onclick={props.onclick}/>\n    }\n    else if (props.name === \"rankings\"){\n        pageContent = <Rankings onclick={props.onclick}/>\n    }\n    else {\n        pageContent = <HomePage />\n    }\n    return (\n        <div id=\"page\">\n            { pageContent }\n        </div>\n    )\n}\n\nexport default Page;","import React from \"react\";\nconst LogoutButton = (props) => {\n    return (\n        <button onClick={() => props.changeLoginStatus()}>\n            Log Out\n        </button>\n    )\n};\nexport default LogoutButton;","import React from \"react\";\nimport RedirectButton from \"./RedirectButton\";\nimport LogoutButton from \"./LogoutButton\";\nconst NavBar = (props) => {\n    let links = props.links.map((link) => {\n        return (\n        <li key={link.key}>\n            <RedirectButton text={link.text}\n                onclick={() => link.onclick(link.path)}>\n            </RedirectButton>\n        </li>\n        )});\n    let Logout = props.loggedIn ? <LogoutButton changeLoginStatus={props.changeLoginStatus}/> : \"\"\n    return (\n        <nav>\n            <h1>Travelon</h1>\n            <ul className=\"nav-links\">\n                {links}\n            </ul>\n            {Logout}\n        </nav>\n    );\n};\nexport default NavBar;","import React from \"react\";\nimport NavBar from \"./NavBar\";\nconst Header = (props) => {\n    return (\n    <header className=\"header\">\n        <NavBar links={props.links} changeLoginStatus={props.changeLoginStatus} loggedIn={props.loggedIn}/>\n    </header>\n    );\n};\nexport default Header;","import './App.css';\nimport React, {useEffect, useState} from \"react\"\nimport Page from \"./components/Page\"\nimport Header from \"./components/Header\";\n\n\nfunction App() {\n\n    const [pageName, setPageName] = useState(\"\");\n    const [accountName, setAccountName] = useState(\"\");\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    const handlePageSwitch = (name) => {\n        setPageName(name);\n    };\n    const changeLoginStatus = () => {\n        console.log(\"changed login status\");\n        setLoggedIn(! loggedIn);\n    };\n    const setAccount = (name) => {\n        setAccountName(name);\n    }\n    // Changes page title\n    useEffect(() => {\n            document.title = \"Travelon \" + pageName;\n            }, [pageName]);\n    const login =  {\n            onclick: handlePageSwitch,\n            text: \"Login\",\n            path: \"login\",\n            key: 1\n        };\n    const register =         {\n            onclick: handlePageSwitch,\n            text: \"Register\",\n            path: \"register\",\n            key: 2\n        };\n    const account = {\n            onclick: handlePageSwitch,\n            text: \"Account\",\n            path: \"account\",\n            key: 3\n        };\n    \n    const change =         {\n        onclick: handlePageSwitch,\n        text: \"Change\",\n        path:\"change\",\n        key:8\n    };\n\n    const friendslist =         {\n        onclick: handlePageSwitch,\n        text: \"Friendslist\",\n        path: \"friendslist\",\n        key:7\n    };\n\n    const links = [\n        {\n            onclick: handlePageSwitch,\n            text: \"Home\",\n            path: \"home\",\n            key: 0\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"About\",\n            path:\"about\",\n            key:4\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"Contact\",\n            path: \"contact\",\n            key:5\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"Friendslist\",\n            path: \"friendslist\",\n            key:7\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"StarRatings\",\n            path: \"starRatings\",\n            key:6\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"Rankings\",\n            path:\"rankings\",\n            key:9\n        },\n    ];\n    if (! loggedIn) {\n        links.push(login);\n        links.push(register);\n    }\n    else {\n        links.push(account);\n        links.push(friendslist)\n        links.push(change)\n    }\n  return (\n      <>\n        <div className=\"App\">\n            <Header links={links} loggedIn={loggedIn} changeLoginStatus={changeLoginStatus}/>\n          <Page name={pageName} onclick={handlePageSwitch} setAccount={setAccount}  accountName={accountName} changeLoginStatus={changeLoginStatus}/>\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}