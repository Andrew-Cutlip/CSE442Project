{"version":3,"sources":["components/RedirectButton.jsx","components/RegistrationForm.jsx","components/LoginForm.jsx","components/HomePage.jsx","components/AccountPage.jsx","components/About.jsx","components/Contact.jsx","components/Page.jsx","components/LogoutButton.jsx","components/NavBar.jsx","components/Header.jsx","App.jsx","index.jsx"],"names":["RedirectButton","props","onClick","onclick","text","RegistrationForm","useState","Password","setPassword","Username","setUsername","Email","setEmail","Submit","setSubmit","useEffect","requestOptions","method","headers","body","JSON","stringify","username","password","email","console","log","fetch","then","response","json","data","handleSubmit","e","preventDefault","clientId","showLoginButton","setShowLoginButton","showLogoutButton","setShowLogoutButton","id","name","className","align","onSubmit","type","placeholder","required","onChange","target","value","buttonText","onSuccess","res","profileObj","onFailure","cookiePolicy","onLogoutSuccess","alert","Login","loggedIn","changeLoginStatus","setAccount","HomePage","AccountPage","accountName","About","Contact","Page","pageContent","LoginForm","setLoginStatus","LogoutButton","NavBar","links","map","link","path","key","Logout","Header","App","pageName","setPageName","setAccountName","setLoggedIn","handlePageSwitch","document","title","login","register","account","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1f5f48a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Form.css\";\nfunction RedirectButton(props) {\n    return (\n        <button onClick={props.onclick}>\n            {props.text}\n        </button>\n    )\n}\n\nexport default RedirectButton","import React, {useEffect, useState} from \"react\";\nimport RedirectButton from \"./RedirectButton\"\nimport {GoogleLogin, GoogleLogout} from 'react-google-login'\nimport \"./Form.css\";\n\n\nfunction RegistrationForm(props) {\n\n    const [Password, setPassword] = useState(\"\");\n    const [Username, setUsername] = useState(\"\")\n    const [Email, setEmail] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n       const requestOptions = {\n           method: 'POST',\n           headers: {\n               \"Content-Type\": \"application/json\"\n           },\n           body: JSON.stringify({\n               username: Username,\n               password: Password,\n               email: Email\n           })\n       };\n           if (Submit) {\n               console.log(\"Sending a registration\\n\");\n               setSubmit(false);\n               fetch(\"/register\", requestOptions)\n                .then(response => response.json)\n                .then(data => console.log(data))\n            }\n    }, [Submit, Password, Username, Email]);\n\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Handling Submit\")\n        setSubmit(true);\n    };\n\n    const clientId = \"891542752976-2b518b2l45tl0foe8c17pjm1h76pcf79.apps.googleusercontent.com\"\n    const [showLoginButton, setShowLoginButton] = useState(true);\n    const [showLogoutButton, setShowLogoutButton] = useState(false);\n\n    const onLogInSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowLoginButton(false);\n        setShowLogoutButton(true);\n    }\n    const onFailureSuccess = (res) => {\n        console.log('Login Failed:', res);\n    }\n    const onSignoutSuccess = (res) => {\n        alert(\"You have been signed out successfully.\")\n        setShowLoginButton(true);\n        setShowLogoutButton(false);\n    }\n\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n    let handleEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    return (\n        <div>\n            <h1>Register</h1>\n                <form id=\"Register\" name=\"Register\"  className = \"Register\"  align = \"Center\" onSubmit={handleSubmit}>\n\n                        <label>\n                            UserName:\n                            <input name=\"username\" type=\"text\" placeholder=\"Username\" required onChange={handleUsername}/>\n                        </label>\n                        <label>\n                            Password:\n                            <input name=\"password\" type=\"password\" placeholder=\"Password\" required onChange={handlePassword}/>\n                        </label>\n                        <label>\n                            Email:\n                            <input name=\"email\" type=\"email\" placeholder=\"example@ex.com\" required onChange={handleEmail}/>\n                        </label>\n                        <input type=\"submit\" value=\"Submit\" onClick={handleSubmit}/>\n                        <RedirectButton type = \"Submit\" className = \"RedirectButton\" text={\"Already have an account: Login here\"}\n           onclick={() => props.onclick(\"login\")}>\n\n           </RedirectButton>\n\n            {showLoginButton ?\n                    <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onLogInSuccess}\n                    onFailure={onFailureSuccess}\n                    cookiePolicy={'single_host_origin'}\n                    className=\"gsignin\"\n                    />\n                    : null\n\n            }\n\n            {showLogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n                </form>\n\n        </div>\n\n\n\n    );\n}\nexport default RegistrationForm;","import React, {useEffect, useState} from \"react\";\nimport RedirectButton from \"./RedirectButton\"\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\nimport \"./Form.css\";\n\nfunction Login(props) {\n    const clientId = \"891542752976-2b518b2l45tl0foe8c17pjm1h76pcf79.apps.googleusercontent.com\"\n    const [showLoginButton, setShowLoginButton] = useState(true);\n    const [showLogoutButton, setShowLogoutButton] = useState(false);\n\n    const onLogInSuccess = (res) => {\n        console.log('Login Success:', res.profileObj);\n        setShowLoginButton(false);\n        setShowLogoutButton(true);\n    }\n    const onFailureSuccess = (res) => {\n        console.log('Login Failed:', res);\n    }\n\n    const onSignoutSuccess = (res) => {\n        alert(\"You have been signed out successfully.\")\n        setShowLoginButton(true);\n        setShowLogoutButton(false);\n    }\n\n    const [Password, setPassword] = useState(\"\");\n    const [Username, setUsername] = useState(\"\")\n    const [Submit, setSubmit] = useState(false)\n\n    useEffect(() => {\n       const requestOptions = {\n           method: 'POST',\n           headers: {\n               \"Content-Type\": \"application/json\"\n           },\n           body: JSON.stringify({\n               username: Username,\n               password: Password\n           })\n       };\n           if (Submit) {\n               console.log(\"Logging in!\")\n               setSubmit(false);\n                fetch(\"/register\", requestOptions)\n                    .then(response => response.json)\n                    .then(data => {\n                        console.log(data);\n                        let loggedIn = data.loggedIn;\n                        if (loggedIn) {\n                            props.changeLoginStatus();\n                        }\n                    })\n                    .then(() => {\n                        console.log(\"Got Username\");\n                        props.setAccount(Username);\n                    })\n                }\n    }, [Submit, Password, Username]);\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        setSubmit(true);\n    };\n    let handleUsername = (e) => {\n        setUsername(e.target.value);\n    };\n    let handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return(\n        <div>\n        <h1>Login</h1>\n        <form id=\"Login-Form\" className = \"Login\" name=\"Login\" onSubmit={handleSubmit}>\n        <label> Username:\n        <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" onChange={handleUsername}/>\n        </label>\n        <label> Password:\n        <input type=\"password\" name=\"password\" id=\"logPassword\" placeholder=\"Password\" onChange={handlePassword}/>\n        </label>\n        <input type=\"submit\" name=\"submit\" value=\"Submit\" onSubmit={handleSubmit}/>\n\n            <RedirectButton text={\"Create an account\"}\n           onclick={() => props.onclick(\"register\")}>\n\n           </RedirectButton>\n\n            {showLoginButton ?\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onLogInSuccess}\n                    onFailure={onFailureSuccess}\n                    cookiePolicy={'single_host_origin'}\n                /> : null\n\n            }\n\n            {showLogoutButton ?\n                <GoogleLogout\n                    clientId={clientId}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={onSignoutSuccess}\n                >\n                </GoogleLogout> : null\n            }\n            </form>\n        </div>\n\n    );\n}\nexport default Login;","import React from \"react\";\nconst HomePage = () => {\n    return (\n      <div id=\"home\">\n        <h1>Home</h1>\n          <p>If you love to travel</p>\n        <p>Why not share your experience to the world?</p>\n      </div>\n    );\n};\nexport default HomePage;","import React from \"react\";\n\nconst AccountPage = (props) => {\n    return (\n     <div id=\"account\">\n        <h2>My Account:</h2>\n         <p>Welcome {props.accountName}!</p>\n     </div>\n    );\n};\nexport default AccountPage;","import React from \"react\";\n\nconst About = () =>{\n    return(\n        <div id=\"about\">\n\n            <h1>About us</h1>\n\n            <h1>Development Team</h1>\n            <h3>Background</h3>\n            <p>\n                 We are a group of people who love to travel. Many of us a still pioneers at traveling,\n                however, we know many people enjoy traveling as a hobby.\n            </p>\n            <h3>Goals</h3>\n            <p>\n             Our goal is to bring people together. Those who travel hundreds of miles can stay in cantact with\n                each other and share their traveling expirences with other people.\n            </p>\n        </div>\n            \n    );\n}\nexport default About;\n\n","import React from \"react\";\n\nconst Contact = () => {\n    return(\n\n        <div id=\"contact\">\n\n                    <h1>Contact us</h1>\n                    <p>\n                        If you are having trouble with the site or want more\n                        information. Feel free to contact us!\n                    </p>\n                    \n                    <p>Information</p>\n                    <p>Emails:\n                    some1@gmail.com</p>\n                    <p>Phone:\n                    777-7777-7777</p>\n                    <p>Location:\n                    Buffalo\n                    </p>\n            </div>\n    );\n}\nexport default Contact;","import React from \"react\";\nimport RegistrationForm from \"./RegistrationForm\"\nimport LoginForm from \"./LoginForm\"\nimport HomePage from \"./HomePage\";\nimport AccountPage from \"./AccountPage\";\nimport About from \"./About\"\nimport Contact from \"./Contact\"\n\nconst Page = (props) => {\n    let pageContent;\n    if (props.name === \"register\") {\n        pageContent = <RegistrationForm onclick={props.onclick} />\n    }\n    else if (props.name === \"login\"){\n        pageContent = <LoginForm onclick={props.onclick} setAccount={props.setAccount} setLoginStatus={props.setLoginStatus}/>;\n    }\n    else if (props.name === \"account\"){\n        pageContent = <AccountPage accountName={props.accountName}/>\n    }\n    else if (props.name === \"about\"){\n        pageContent = <About />\n    }\n    else if (props.name === \"contact\"){\n        pageContent = <Contact />\n    }\n    else {\n        pageContent = <HomePage />\n    }\n    return (\n        <div id=\"page\">\n            { pageContent }\n        </div>\n    )\n}\n\nexport default Page;","import React from \"react\";\nconst LogoutButton = (props) => {\n    return (\n        <button onClick={() => props.changeLoginStatus()}>\n            Log Out\n        </button>\n    )\n};\nexport default LogoutButton;","import React from \"react\";\nimport RedirectButton from \"./RedirectButton\";\nimport LogoutButton from \"./LogoutButton\";\nconst NavBar = (props) => {\n    let links = props.links.map((link) => {\n        return (\n        <li key={link.key}>\n            <RedirectButton text={link.text}\n                onclick={() => link.onclick(link.path)}>\n            </RedirectButton>\n        </li>\n        )});\n    let Logout = props.loggedIn ? <LogoutButton changeLoginStatus={props.changeLoginStatus}/> : \"\"\n    return (\n        <nav>\n            <h1>Travelon</h1>\n            <ul className=\"nav-links\">\n                {links}\n            </ul>\n            {Logout}\n        </nav>\n    );\n};\nexport default NavBar;","import React from \"react\";\nimport NavBar from \"./NavBar\";\nconst Header = (props) => {\n    return (\n    <header className=\"header\">\n        <NavBar links={props.links} changeLoginStatus={props.changeLoginStatus} loggedIn={props.loggedIn}/>\n    </header>\n    );\n};\nexport default Header;","import './App.css';\nimport React, {useEffect, useState} from \"react\"\nimport Page from \"./components/Page\"\nimport Header from \"./components/Header\";\n\n\nfunction App() {\n\n    const [pageName, setPageName] = useState(\"\");\n    const [accountName, setAccountName] = useState(\"\");\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    const handlePageSwitch = (name) => {\n        setPageName(name);\n    };\n    const changeLoginStatus = () => {\n        setLoggedIn(! loggedIn);\n    };\n    const setAccount = (name) => {\n        setAccountName(name);\n    }\n    // Changes page title\n    useEffect(() => {\n            document.title = \"Travelon \" + pageName;\n            }, [pageName]);\n    const login =  {\n            onclick: handlePageSwitch,\n            text: \"Login\",\n            path: \"login\",\n            key: 1\n        };\n    const register =         {\n            onclick: handlePageSwitch,\n            text: \"Register\",\n            path: \"register\",\n            key: 2\n        };\n    const account = {\n            onclick: handlePageSwitch,\n            text: \"Account\",\n            path: \"account\",\n            key: 3\n        };\n    const links = [\n        {\n            onclick: handlePageSwitch,\n            text: \"Home\",\n            path: \"home\",\n            key: 0\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"About\",\n            path:\"about\",\n            key:4\n        },\n        {\n            onclick: handlePageSwitch,\n            text: \"Contact\",\n            path: \"contact\",\n            key:5\n        },\n    ];\n    if (! loggedIn) {\n        links.push(login);\n        links.push(register);\n    }\n    else {\n        links.push(account);\n    }\n  return (\n      <>\n        <div className=\"App\">\n            <Header links={links} loggedIn={loggedIn} changeLoginStatus={changeLoginStatus}/>\n          <Page name={pageName} onclick={handlePageSwitch} setAccount={setAccount}  accountName={accountName}/>\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}